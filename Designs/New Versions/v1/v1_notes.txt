7/17/20 updating PizzaPicker app to handle new sauces/toppings and to not generate pizzas with removed/not used sauces/toppings

	- CHANGES:
		- adding topping Hot Buffalo Sauce
		- adding sauces Ranch, Garlic Parmesan Sauce, Honey BBQ Sauce
		- adding Used column to Sauces and Toppings tables
		- adding IsRandomlyGenerated column to PizzaView
		- changing sauces Garlic Parmesan White Sauce and BBQ Sauce to Used = 0; all other sauces Used = 1
		- changing topping Hot Sauce to Used = 0; all other toppings Used = 1

	- add "used" column to sauces and toppings tables; bit type
		- if a sauce or topping has this col = 0, then the random generator will not generate any pizza with that sauce/topping, but will still show on recently eaten list and still able to update
		ALTER TABLE Sauces ADD Used BIT NOT NULL DEFAULT 0
		ALTER TABLE Toppings ADD Used BIT NOT NULL DEFAULT 0
		
	- make Deleted have a default val of 0 so it's possible to insert records without defining this column
		ALTER TABLE Sauces ADD DEFAULT 0 FOR Deleted
		ALTER TABLE Toppings ADD DEFAULT 0 FOR Deleted
		
	- add new sauces and toppings to tables, as well as mark each unused one as having used = 0
		INSERT INTO Sauces (Name) VALUES ('Garlic Parmesan Sauce'), ('Honey BBQ Sauce'), ('Ranch')
		UPDATE Sauces SET Used = 1 WHERE Name IN('Robust Inspired Tomato Sauce', 'Hearty Marinara Sauce', 'Honey BBQ Sauce', 'Garlic Parmesan Sauce', 'Alfredo Sauce', 'Ranch')
		UPDATE Sauces SET Used = 0 WHERE Name NOT IN('Robust Inspired Tomato Sauce', 'Hearty Marinara Sauce', 'Honey BBQ Sauce', 'Garlic Parmesan Sauce', 'Alfredo Sauce', 'Ranch')
		
		INSERT INTO Toppings (Name, IsMeat, IsCheese) VALUES ('Hot Buffalo Sauce', 0, 0)
		UPDATE Toppings SET Used = 1 WHERE Name IN('Ham', 'Beef', 'Bacon', 'Italian Sausage', 'Pepperoni', 'Philly Steak', 'Premium Chicken', 'Salami', 'Banana Peppers', 'Black Olives', 'Cheddar Cheese', 'Diced Tomatoes', 'Feta Cheese', 'Green Olives', 'Green Peppers', 'Hot Buffalo Sauce', 'Jalapeno Peppers', 'Mushrooms', 'Onion', 'Pineapple', 'Roasted Red Peppers', 'Shredded Parmesan Asiago', 'Shredded Provolone Cheese', 'Spinach')
		UPDATE Toppings SET Used = 0 WHERE Name NOT IN('Ham', 'Beef', 'Bacon', 'Italian Sausage', 'Pepperoni', 'Philly Steak', 'Premium Chicken', 'Salami', 'Banana Peppers', 'Black Olives', 'Cheddar Cheese', 'Diced Tomatoes', 'Feta Cheese', 'Green Olives', 'Green Peppers', 'Hot Buffalo Sauce', 'Jalapeno Peppers', 'Mushrooms', 'Onion', 'Pineapple', 'Roasted Red Peppers', 'Shredded Parmesan Asiago', 'Shredded Provolone Cheese', 'Spinach')
		
		UPGRADE TIP: if upgrading up multiple versions (ex. first installing app but it's on version 3), only run ONE v3 update, so don't do the INSERTS unless the value doesn't already exist. the updates would be using the sauce/topping list that is most recent as of that version. rows should never be deleted, simply marked as used/unused instead
	
	- update the PizzaView to have a column "IsRandomlyGenerated" bit type that = 0 if any one or more of its sauces/toppings is used = 0
		ALTER view [dbo].[PizzaView] as
		select s.Name as Sauce, t1.Name as Topping1, t2.Name as Topping2, t3.Name as Topping3, Eaten, DateEaten, Rating, Comment, p.Version, p.Id, p.CreatedAt, p.UpdatedAt, p.Deleted
			, CONVERT(BIT, CASE WHEN s.Used = 0 OR t1.Used = 0 OR t2.Used = 0 OR t3.Used = 0 THEN 0 ELSE 1 END) AS IsRandomlyGenerated
		from pizzas p 
		inner join sauces s on p.SauceId = s.Id
		inner join toppings t1 on p.Topping1Id = t1.Id
		inner join toppings t2 on p.Topping2id = t2.Id
		inner join toppings t3 on p.Topping3id = t3.Id
	
	
	- populate pizza table with new pizzas that include any new sauces/toppings
		- use original console app code to find which pizzas need to be added and export them to an excel spreadsheet in CSV format
			- basic idea is to add the new sauces/toppings to the sauces/toppings Lists, run the same loop that existed in order to evaluate every pizza (now up to 12,144!), only add to final pizza list if one of the new sauces/toppings are on the current pizza being evaluated, then export that list to Excel
			
			- should make a separate console app that does only this and use it whenever i need to do this same type of update... although i'm going to be moving into a SQLite only setup, so this won't apply after that point...
			
		- import the Excel data into a new temp table on SQL server
			- right click the DB in SSMS -> Tasks -> Import Data
			- Data Source = Flat File
			- choose the CSV file; header row delimeter {CR}{LF}; header rows to skip = 0; column names in first row = checked
			- Destination = SQL Server native client; everything else on this page shouldn't need to be changed
			- Next; make sure everything looks good
			- finish
		
		- insert a new record into the pizza table for every row in the temp table
			- join to sauces/toppings tables on Name in order to get ID
			- this only works if the new sauces/toppings are added to their respective tables first
			
			
			- needed to alter some of the columns first
			
			ALTER TABLE Pizzas ADD DEFAULT 0 FOR Eaten
			ALTER TABLE Pizzas ADD DEFAULT 0 FOR DateEaten
			ALTER TABLE Pizzas ADD DEFAULT 0 FOR Rating
			ALTER TABLE Pizzas ADD DEFAULT 0 FOR Deleted
			ALTER TABLE Pizzas ADD DEFAULT '' FOR Comment


			ALTER TABLE Pizzas ALTER COLUMN SauceId nvarchar(128) NOT NULL
			ALTER TABLE Pizzas ALTER COLUMN Topping1Id nvarchar(128) NOT NULL
			ALTER TABLE Pizzas ALTER COLUMN Topping2Id nvarchar(128) NOT NULL
			ALTER TABLE Pizzas ALTER COLUMN Topping3Id nvarchar(128) NOT NULL
			
			
			
			- insert
			INSERT INTO Pizzas (SauceId, Topping1Id, Topping2Id, Topping3Id)
			SELECT s.Id, t1.Id, t2.Id, t3.Id 
			FROM PizzasToInsert i
			INNER JOIN Sauces s ON i.Sauce = s.Name
			INNER JOIN Toppings t1 ON i.[Topping 1] = t1.Name
			INNER JOIN Toppings t2 ON i.[Topping 2] = t2.Name
			INNER JOIN Toppings t3 ON i.[Topping 3] = t3.Name
			
			
	- update the backend and client model types to reflect the addition of the new columns
	
	- in the generate random screen, make sure only pizza view records with IsRandomlyGenerated = 1 are selected from			
			
			
			
		